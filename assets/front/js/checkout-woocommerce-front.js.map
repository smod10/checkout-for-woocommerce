{"version":3,"sources":["sources/ts/front/CFW/Elements/Element.ts","sources/ts/front/CFW/Elements/TabContainerBreadcrumb.ts","sources/ts/front/CFW/Enums/LabelType.ts","sources/ts/front/CFW/Elements/InputLabelWrap.ts","sources/ts/front/CFW/Elements/TabContainerSection.ts","sources/ts/front/CFW/Elements/TabContainer.ts","sources/ts/front/CFW/Main.ts"],"names":[],"mappings":"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","file":"checkout-woocommerce-front.js","sourcesContent":["export class Element {\n    private _jel: JQuery;\n\n    constructor(jel: JQuery) {\n        this.jel = jel;\n    }\n\n    get jel(): JQuery {\n        return this._jel;\n    }\n\n    set jel(value: JQuery) {\n        this._jel = value;\n    }\n}","import { Element } from \"Element\";\n\nexport class TabContainerBreadcrumb extends Element {\n    constructor(jel: JQuery) {\n        super(jel);\n    }\n}","export enum LabelType {\n    TEXT,\n    PASSWORD\n}","import { Element } from \"Element\";\nimport { LabelType } from \"../Enums/LabelType\";\nimport { EventCallback } from \"../Types/Types\";\n\nexport class InputLabelWrap extends Element {\n\n    private static _labelClass: string = \"cfw-floating-label\";\n\n    private _input: Element;\n    private _eventCallbacks: Array<EventCallback>;\n\n    constructor(jel: JQuery, eventCallbacks: Array<EventCallback> = []) {\n        super(jel);\n\n        this.eventCallbacks = [\n            { eventName: \"keyup\", func: this.wrapClassSwap.bind(this), target: null }\n        ];\n\n        this.setInputAndLabel();\n        this.wrapClassSwap();\n    }\n\n    wrapClassSwap() {\n        if(this.input.jel.val() !== \"\" && !this.jel.hasClass(InputLabelWrap.labelClass)) {\n            this.jel.addClass(InputLabelWrap.labelClass);\n        }\n\n        if(this.input.jel.val() === \"\" && this.jel.hasClass(InputLabelWrap.labelClass)) {\n            this.jel.removeClass(InputLabelWrap.labelClass);\n        }\n    }\n\n    setInputAndLabel() {\n        let lt = $.map(LabelType, function(value, index) {\n            return [value];\n        });\n\n        // Note: Length is divided by 2 because of ENUM implementation. Read TS docs\n        for(let i = 0; i < lt.length / 2; i++) {\n            let type = lt[i].toLowerCase();\n\n            let tjel = this.jel.find('input[type=\"' + type + '\"]');\n\n            if(tjel.length > 0) {\n                this.input = new Element(tjel);\n            }\n\n            if(this.input) {\n                this.eventCallbacks.forEach((eventCb) => {\n                    let eventName: any = eventCb.eventName;\n                    let cb: Function = eventCb.func;\n                    let target: JQuery = eventCb.target;\n\n                    if(!target) {\n                        target = this.input.jel;\n                    }\n\n                    target.on(eventName, cb);\n                });\n            }\n        }\n    }\n\n    static get labelClass(): string {\n        return InputLabelWrap._labelClass;\n    }\n\n    static set labelClass(value: string) {\n        InputLabelWrap._labelClass = value;\n    }\n\n    get input(): Element {\n        return this._input;\n    }\n\n    set input(value: Element) {\n        this._input = value;\n    }\n\n    get eventCallbacks(): Array<EventCallback> {\n        return this._eventCallbacks;\n    }\n\n    set eventCallbacks(value: Array<EventCallback>) {\n        this._eventCallbacks = value;\n    }\n}","import { Element }                  from \"Element\";\nimport { InputLabelWrap }           from \"InputLabelWrap\";\nimport { LabelType }                from \"../Enums/LabelType\";\nimport { InputLabelType }           from \"../Types/Types\";\n\nexport class TabContainerSection extends Element {\n    private _name: string = \"\";\n    private _inputLabelWrapClass: string = \"\";\n    private _inputLabelTypes: Array<InputLabelType> = [];\n    private _inputLabelWraps: Array<InputLabelWrap> = [];\n\n    constructor(\n        jel: JQuery,\n        name: string,\n        inputLabelWrapClass: string = \"cfw-input-wrap\",\n        inputLabelTypes: Array<InputLabelType> = [\n            { type: LabelType.TEXT, cssClass: \"cfw-text-input\" },\n            { type: LabelType.PASSWORD, cssClass: \"cfw-password-input\"}\n        ]\n    ) {\n        super(jel);\n\n        this.name = name;\n        this.inputLabelWrapClass = inputLabelWrapClass;\n        this.inputLabelTypes = inputLabelTypes;\n\n        this.setInputLabelWraps();\n    }\n\n    getInputLabelWrapSelector(): string {\n        let selector: string = \"\";\n\n        this.inputLabelTypes.forEach((labelType, index) => {\n            selector += \".\" + this.inputLabelWrapClass + \".\" + labelType.cssClass;\n\n            if(index+1 != this.inputLabelTypes.length) {\n                selector += \", \";\n            }\n        });\n\n        return selector;\n    }\n\n    setInputLabelWraps(): void {\n        let inputLabelWraps: Array<InputLabelWrap> = [];\n        let jInputLabelWraps: JQuery = this.jel.find(this.getInputLabelWrapSelector());\n\n        jInputLabelWraps.each((index, wrap) => {\n            inputLabelWraps.push( new InputLabelWrap( $(wrap) ) );\n        });\n\n        this.inputLabelWraps = inputLabelWraps;\n    }\n\n    get name(): string {\n        return this._name;\n    }\n\n    set name(value: string) {\n        this._name = value;\n    }\n\n    get inputLabelWraps(): Array<InputLabelWrap> {\n        return this._inputLabelWraps;\n    }\n\n    set inputLabelWraps(value: Array<InputLabelWrap>) {\n        this._inputLabelWraps = value;\n    }\n\n    get inputLabelTypes(): Array<InputLabelType> {\n        return this._inputLabelTypes;\n    }\n\n    set inputLabelTypes(value: Array<InputLabelType>) {\n        this._inputLabelTypes = value;\n    }\n\n    get inputLabelWrapClass(): string {\n        return this._inputLabelWrapClass;\n    }\n\n    set inputLabelWrapClass(value: string) {\n        this._inputLabelWrapClass = value;\n    }\n}","import { Element }                          from \"Element\";\nimport { TabContainerBreadcrumb }           from \"TabContainerBreadcrumb\";\nimport { TabContainerSection }              from \"TabContainerSection\";\n\nexport class TabContainer extends Element {\n\n    private _tabContainerBreadcrumb: TabContainerBreadcrumb;\n    private _tabContainerSections: Array<TabContainerSection>;\n\n    constructor(jel: JQuery, tabContainerBreadcrumb: TabContainerBreadcrumb, tabContainerSections: Array<TabContainerSection>) {\n        super(jel);\n\n        this.tabContainerBreadcrumb = tabContainerBreadcrumb;\n        this.tabContainerSections = tabContainerSections;\n    }\n\n    easyTabs() {\n        this.jel.easytabs();\n    }\n\n\n    get tabContainerBreadcrumb(): TabContainerBreadcrumb {\n        return this._tabContainerBreadcrumb;\n    }\n\n    set tabContainerBreadcrumb(value: TabContainerBreadcrumb) {\n        this._tabContainerBreadcrumb = value;\n    }\n\n    get tabContainerSections(): Array<TabContainerSection> {\n        return this._tabContainerSections;\n    }\n\n    set tabContainerSections(value: Array<TabContainerSection>) {\n        this._tabContainerSections = value;\n    }\n}","/// <reference path=\"../../../../typings/index.d.ts\" />\n\nimport { TabContainer } from \"./Elements/TabContainer\";\n\nexport class Main {\n\n\tprivate _tabContainer: TabContainer;\n\n\tconstructor(tabContainer: TabContainer) {\n\t\tthis.tabContainer = tabContainer;\n\t}\n\n\tsetup() {\n\t\t// Setup easy tabs\n\t\tthis.tabContainer.easyTabs();\n\t\tthis.setupAnimationListeners();\n\t}\n\n\tsetupAnimationListeners() {\n\t\t$(\"#cfw-ci-login\").on(\"click\", function(){\n\t\t\t$(\"#cfw-login-slide\").slideDown(300);\n\t\t});\n\t}\n\n\tget tabContainer() {\n\t\treturn this._tabContainer;\n\t}\n\tset tabContainer(value: TabContainer) {\n\t\tthis._tabContainer = value;\n\t}\n}"]}